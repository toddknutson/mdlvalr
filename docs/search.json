[{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/articles/mdlvalr_getting_started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"mdlvalr_getting_started","text":"vignette demonstrate use mdlvalr package functions generate concordance analysis data generated hybrid capture pipeline. Load required packages.","code":"library(mdlvalr) library(tidyverse) #> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ── #> ✔ ggplot2 3.3.6     ✔ purrr   0.3.4 #> ✔ tibble  3.1.8     ✔ dplyr   1.0.9 #> ✔ tidyr   1.2.0     ✔ stringr 1.4.0 #> ✔ readr   2.1.2     ✔ forcats 0.5.1 #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() library(glue) library(openxlsx)"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/articles/mdlvalr_getting_started.html","id":"get-input-data--use-the-provided-example-data-that-comes-with-the-mdlvalr-r-package-","dir":"Articles","previous_headings":"","what":"Get input data. Use the provided example data that comes with the mdlvalr R package.","title":"mdlvalr_getting_started","text":"Create variables analysis. Create set working dir. Find set files (tarballs) outputs pipeline. Untar uncompress data necessary. Capture paths, sample names, etc. tar files store info data frame (e.g. tibble). Create set analysis-specific working dir. Use validate_samples() function create standardized “sample sheet” concordance analysis. function return new tibble data needed downstream functions check various assumptions comparison groups. Load RefSeq GFF dataset (supplied R package) Run concordance Create files Zip results","code":"# Set up output dir and names # out_dir <- \"/home/clinicalmdl/shared/disaster_recovery/ris/knut0297/r_package_mdlvalr/mdlvalr/vignettes\" out_dir <- normalizePath(\".\") pipeline_name <- \"hybcap\" input_data_dir <- \"input_data\" curr_time <- format(Sys.time(), \"%Y-%m-%d_%H%M%S\") output_data_dir <- glue(\"{pipeline_name}_concordance_{curr_time}\") if (!dir.exists(glue(\"{out_dir}/{pipeline_name}/{input_data_dir}\"))) {dir.create(glue(\"{out_dir}/{pipeline_name}/{input_data_dir}\"), recursive = TRUE)} setwd(glue(\"{out_dir}/{pipeline_name}/{input_data_dir}\")) # Set working dir out_dir <- normalizePath(\".\") proj_name <- \"concordance_hybcap\"   # Find example data included with mdlvalr package extdata_dir <- system.file(\"extdata\", package = \"mdlvalr\", mustWork = TRUE) tar_files <- list.files(extdata_dir, pattern = \"*.tar.gz\", full.names = TRUE, recursive = TRUE)   # Untar and uncompress files (if not already available) for (i in seq_along(tar_files)) {     curr_tar_path <- tar_files[i]     # Find the top level dir name inside the tar.gz     curr_top_level_dirname <- basename(untar(tarfile = curr_tar_path, list = TRUE)[1])          if (!dir.exists(curr_top_level_dirname)) {         untar(tarfile = curr_tar_path)     } else {         message(glue(\"'{curr_top_level_dirname}' dir already exists - will not untar again.\"))     } } #> '221313_01-01011-100_2022_0121_1317' dir already exists - will not untar again. #> '221313_01-01011-150_2022_0121_1319' dir already exists - will not untar again. #> '221313_01-01012-100_2022_0121_1326' dir already exists - will not untar again. #> '221313_01-01012-150_2022_0121_1324' dir already exists - will not untar again. #> '221313_01-01013-100_2022_0121_1305' dir already exists - will not untar again. #> '221313_01-01013-150_2022_0121_1309' dir already exists - will not untar again. #> '221313_01-01014-100_2022_0121_1314' dir already exists - will not untar again. #> '221313_01-01014-150_2022_0121_1316' dir already exists - will not untar again. cwd <- getwd()  samples_tbl <- tibble(tar_path = tar_files) %>%     dplyr::mutate(tar_filename = basename(tar_path)) %>%     dplyr::mutate(out_name = str_remove(tar_filename, \".tar.gz\")) %>%     dplyr::mutate(out_name = str_remove(out_name, \"^output_\")) %>%     dplyr::mutate(sample_name = str_split(out_name, \"_\", simplify = TRUE)[, 2]) %>%     dplyr::mutate(sample_name_short = str_remove(sample_name, \"-[^-]*$\")) %>%     dplyr::mutate(sample_name_short = factor(sample_name_short)) %>%     dplyr::mutate(group = str_extract(sample_name, \"[^-]*$\")) %>%     dplyr::mutate(group = glue(\"{group}ng\")) %>%     dplyr::mutate(group = factor(group, levels = c(\"100ng\", \"150ng\"))) %>%     dplyr::mutate(run_name = str_split(out_name, \"_\", simplify = TRUE)[, 1]) %>%     dplyr::mutate(run_ver = str_remove(out_name, fixed(as.character(glue(\"{run_name}_{sample_name}_\"))))) %>%     dplyr::mutate(filtered_path = glue(\"{cwd}/{out_name}/{sample_name}_{run_ver}_filtered_integrated_variant_output_summary.xlsx\")) %>%     dplyr::mutate(coverage_path = glue(\"{cwd}/{out_name}/{sample_name}_{run_ver}_coverage_summary.xlsx\")) # Create output data dir if (!dir.exists(glue(\"{out_dir}/{pipeline_name}/{output_data_dir}\"))) {dir.create(glue(\"{out_dir}/{pipeline_name}/{output_data_dir}\"), recursive = TRUE)} setwd(glue(\"{out_dir}/{pipeline_name}/{output_data_dir}\")) sample_sheet <- validate_samples(samples_tbl = samples_tbl, sample_name = \"sample_name\", sample_group = \"sample_name_short\", comparison_group = \"group\", var_path = \"filtered_path\", cov_path = \"coverage_path\", pipeline = \"hybcap\") # Assign lazy data object to variable invisible(refseq_gff_unnest_with_chrom_cds) refseq_gff_unnest_with_chrom_cds <- refseq_gff_unnest_with_chrom_cds mdlvalr_list <- get_data(sample_sheet) mdlvalr_list <- add_flags(mdlvalr_list, cds_table = refseq_gff_unnest_with_chrom_cds, var_pass_fail_logic = \"VAF >= 0.05\", cov_pass_fail_logic = \"fraction_125x >= 0.9\") #> Warning: replacing previous import 'utils::download.file' by #> 'restfulr::download.file' when loading 'rtracklayer' mdlvalr_list <- compare_vars(mdlvalr_list) mdlvalr_list <- add_var_labels(mdlvalr_list) # Filter tables here?? mdlvalr_list <- get_stats(mdlvalr_list) export_excel(mdlvalr_list, filename_prefix = \"vaf_0.05_\") setwd(glue(\"{out_dir}/{pipeline_name}\")) system(glue(\"tar czvf {output_data_dir}.tar.gz {output_data_dir}\"), intern = TRUE) #> [1] \"hybcap_concordance_2022-09-30_115626/\""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Todd Knutson. Author, maintainer.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Knutson T (2022). mdlvalr: Validation Concordance Analysis MDL Pipelines. https://pages.github.umn.edu/knut0297org/mdlvalr, https://github.umn.edu/knut0297org/mdlvalr.","code":"@Manual{,   title = {mdlvalr: Validation and Concordance Analysis for MDL Pipelines},   author = {Todd Knutson},   year = {2022},   note = {https://pages.github.umn.edu/knut0297org/mdlvalr, https://github.umn.edu/knut0297org/mdlvalr}, }"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/index.html","id":"mdlvalr-r-package-for-the-mdl-clinical-validations","dir":"","previous_headings":"","what":"Validation and Concordance Analysis for MDL Pipelines","title":"Validation and Concordance Analysis for MDL Pipelines","text":"R package can used facilitate validation MDL pipelines.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_cds_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a column indicating whether variant overlaps with a CDS region — add_cds_column","title":"Add a column indicating whether variant overlaps with a CDS region — add_cds_column","text":"Add column indicating whether variant overlaps CDS region","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_cds_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a column indicating whether variant overlaps with a CDS region — add_cds_column","text":"","code":"add_cds_column(var_tbl, cds_table)"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_cds_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a column indicating whether variant overlaps with a CDS region — add_cds_column","text":"var_tbl Tibble variants. Must columns named: chr, start, end, type. cds_table Tibble RefSeq gff includes CDS regions. Must column name: \"type\" indicates CDS .","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_cds_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a column indicating whether variant overlaps with a CDS region — add_cds_column","text":"Returns var_tbl input, includes additional column CDS.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_flags.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function — add_flags","title":"Generic function — add_flags","text":"generic function can take first argument input use correct \"method\" automatically based class argument.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_flags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function — add_flags","text":"","code":"add_flags(mdlvalr_list, ...)"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_flags.hybcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Hybrid capture method function — add_flags.hybcap","title":"Hybrid capture method function — add_flags.hybcap","text":"Hybrid capture method function","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_flags.hybcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hybrid capture method function — add_flags.hybcap","text":"","code":"# S3 method for hybcap add_flags(   mdlvalr_list,   pipeline = \"hybcap\",   cds_table = NULL,   var_pass_fail_logic = \"TRUE\",   cov_pass_fail_logic = \"TRUE\" )"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_flags.hybcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hybrid capture method function — add_flags.hybcap","text":"mdlvalr_list Name list flag input data pipeline string Name pipeline data derived .","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_flags.hybcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hybrid capture method function — add_flags.hybcap","text":"Returns named list tibbles","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_var_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function — add_var_labels","title":"Generic function — add_var_labels","text":"generic function can take first argument input use correct \"method\" automatically based class argument.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_var_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function — add_var_labels","text":"","code":"add_var_labels(mdlvalr_list, ...)"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_var_labels.hybcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Hybrid capture method function — add_var_labels.hybcap","title":"Hybrid capture method function — add_var_labels.hybcap","text":"Hybrid capture method function","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_var_labels.hybcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hybrid capture method function — add_var_labels.hybcap","text":"","code":"# S3 method for hybcap add_var_labels(mdlvalr_list, pipeline = \"hybcap\")"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_var_labels.hybcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hybrid capture method function — add_var_labels.hybcap","text":"mdlvalr_list Name list flag input data pipeline string Name pipeline data derived .","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/add_var_labels.hybcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hybrid capture method function — add_var_labels.hybcap","text":"Returns named list tibbles","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/all_sample_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare a set of samples for concordance — all_sample_compare","title":"Compare a set of samples for concordance — all_sample_compare","text":"function takes tibble sample info (filename paths, sample names, etc.) runs concordance analysis.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/all_sample_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare a set of samples for concordance — all_sample_compare","text":"","code":"all_sample_compare(   samples_tbl,   sample_group,   comparison_group,   var_path,   cov_path,   min_vaf = 0.05,   min_fraction_125x = 0.9,   cds_table )"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/all_sample_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare a set of samples for concordance — all_sample_compare","text":"samples_tbl Tibble sample info. sample_group String column name samples_tbl represents sample group comparison. column samples_tbl needs factor. comparison_group String column name samples_tbl represents comparison group. column samples_tbl needs factor exactly two levels. example, levels might c(\"ver1\", \"ver2\") c(\"20ng\", \"50ng\"). var_path String column name samples_tbl represents variant file path. cov_path String column name samples_tbl represents coverage file path. min_vaf Variant tables filtered based minimum variant allele frequency (VAF). Variants VAF less equal value used comparison.  default: 0.05. min_fraction_125x Exon tables filtered based minimum fraction bases covered 125x. default: 0.9.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/all_sample_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare a set of samples for concordance — all_sample_compare","text":"Returns named list lists. length equal number comparisons made.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/compare_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function — compare_vars","title":"Generic function — compare_vars","text":"generic function can take first argument input use correct \"method\" automatically based class argument.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/compare_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function — compare_vars","text":"","code":"compare_vars(mdlvalr_list, ...)"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/compare_vars.hybcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two variant call sets — compare_vars.hybcap","title":"Compare two variant call sets — compare_vars.hybcap","text":"function takes two samples input compares using dplyr::*_join() functions. results joins captured returned list. internal function.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/compare_vars.hybcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two variant call sets — compare_vars.hybcap","text":"","code":"# S3 method for hybcap compare_vars(   mdlvalr_list,   pipeline = \"hybcap\",   match_by_colnames = c(\"CHROM\", \"POS\", \"REF\", \"ALT\", \"GENE\", \"EXON\"),   suffix_names = c(\".sample1\", \".sample2\") )"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/compare_vars.hybcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two variant call sets — compare_vars.hybcap","text":"match_by_colnames Vector column names use matching. Passed =  parameter join functions. default: c(\"CHROM\", \"POS\", \"REF\", \"ALT\", \"GENE\", \"EXON\"). suffix_names Suffix names added column names running join functions. Vector length two, default: c(\".sample_1\", \".sample_2\"). sample_1_name String sample_1 name. sample_1_var Tibble sample_1 variants. sample_1_cov Tibble sample_1 exon coverage. sample_2_name String sample_2 name. sample_2_var Tibble sample_2 variants. sample_2_cov Tibble sample_2 exon coverage. min_vaf Variant tables filtered based minimum variant allele frequency (VAF). Variants VAF less equal value used comparison.  default: 0.05. min_fraction_125x Exon tables filtered based minimum fraction bases covered 125x. default: 0.9.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/compare_vars.hybcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two variant call sets — compare_vars.hybcap","text":"Returns named list tibbles integers tibble sizes.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/export_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function — export_excel","title":"Generic function — export_excel","text":"generic function can take first argument input use correct \"method\" automatically based class argument.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/export_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function — export_excel","text":"","code":"export_excel(mdlvalr_list, ...)"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/export_excel.hybcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Export data to Excel files using tabs — export_excel.hybcap","title":"Export data to Excel files using tabs — export_excel.hybcap","text":"Export data Excel files using tabs","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/export_excel.hybcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export data to Excel files using tabs — export_excel.hybcap","text":"","code":"# S3 method for hybcap export_excel(mdlvalr_list, pipeline = \"hybcap\", filename_prefix = \"\")"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/filter_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function — filter_data","title":"Generic function — filter_data","text":"generic function can take first argument input use correct \"method\" automatically based class argument.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/filter_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function — filter_data","text":"","code":"filter_data(mdlvalr_list, ...)"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/filter_data.hybcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Hybrid capture method function — filter_data.hybcap","title":"Hybrid capture method function — filter_data.hybcap","text":"Hybrid capture method function","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/filter_data.hybcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hybrid capture method function — filter_data.hybcap","text":"","code":"# S3 method for hybcap filter_data(   mdlvalr_list,   pipeline = \"hybcap\",   var_flag_cols = c(\"vaf_gt_0.03\"),   cov_flag_cols = c(\"fraction_125x_gt_0.9\") )"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/filter_data.hybcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hybrid capture method function — filter_data.hybcap","text":"mdlvalr_list Name list flag input data pipeline string Name pipeline data derived .","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/filter_data.hybcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hybrid capture method function — filter_data.hybcap","text":"Returns named list tibbles","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/fix_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix a vector of names to fit into Excel tabs — fix_names","title":"Fix a vector of names to fit into Excel tabs — fix_names","text":"function takes vector string names reduces length less 31 characters (max Excel tabs).","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/fix_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix a vector of names to fit into Excel tabs — fix_names","text":"","code":"fix_names(vector_of_strings)"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/fix_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix a vector of names to fit into Excel tabs — fix_names","text":"vector_of_strings Vector string names.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/fix_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix a vector of names to fit into Excel tabs — fix_names","text":"Returns vector shortened strings.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read pipeline files into a list — get_data","title":"Read pipeline files into a list — get_data","text":"generic function can take first argument input use correct \"method\" automatically based class argument.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read pipeline files into a list — get_data","text":"","code":"get_data(sample_sheet, pipeline = NULL)  # S3 method for hybcap get_data(sample_sheet, pipeline = \"hybcap\")"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read pipeline files into a list — get_data","text":"sample_sheet Name tibble data.frame contains sample info. class object can used automatically determine funcion methods used. pipeline Standard name pipeline data derived.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read pipeline files into a list — get_data","text":"Returns named list tibbles (length = 2). first variant table second exon coverage table.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_data.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Read pipeline files into a list — get_data","text":"function generic, means different implementations (methods) can executed different classes. class first argument determine method used. See documentation individual methods extra arguments differences behaviour.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read pipeline files into a list — get_data","text":"","code":"class(sample_sheet) #> Error in eval(expr, envir, enclos): object 'sample_sheet' not found # [1] \"hybcap\" \"tbl_df\" \"data.frame\"  mdlvalr_list <- get_data(sample_sheet) #> Error in get_data(sample_sheet): object 'sample_sheet' not found"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_data.hybcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Hybrid capture method function — get_data.hybcap","title":"Hybrid capture method function — get_data.hybcap","text":"Hybrid capture method function","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_data.hybcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hybrid capture method function — get_data.hybcap","text":"","code":"# S3 method for hybcap get_data(sample_sheet, pipeline = \"hybcap\")"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_data.hybcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hybrid capture method function — get_data.hybcap","text":"sample_sheet Name tibble data.frame contains sample info. pipeline string Name pipeline data derived .","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_data.hybcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hybrid capture method function — get_data.hybcap","text":"Returns named list tibbles (length = 2). first variant table second exon coverage table.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function — get_stats","title":"Generic function — get_stats","text":"generic function can take first argument input use correct \"method\" automatically based class argument.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function — get_stats","text":"","code":"get_stats(mdlvalr_list, ...)"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_stats.hybcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture summary stats from the comparisons — get_stats.hybcap","title":"Capture summary stats from the comparisons — get_stats.hybcap","text":"Capture summary stats comparisons","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_stats.hybcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capture summary stats from the comparisons — get_stats.hybcap","text":"","code":"# S3 method for hybcap get_stats(mdlvalr_list, pipeline = \"hybcap\")"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_stats.hybcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capture summary stats from the comparisons — get_stats.hybcap","text":"flag_column_pass Column name used filtering variant calls pass . variants rows \"yes\" column used calculating pass variants. Another possible option \"vaf_gt_0.05\".","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/get_stats.hybcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capture summary stats from the comparisons — get_stats.hybcap","text":"Returns named list tibbles integers tibble sizes.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/out_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Create output files after concordance was performed — out_files","title":"Create output files after concordance was performed — out_files","text":"function takes output list two_sample_compare() input writes output Excel files.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/out_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create output files after concordance was performed — out_files","text":"","code":"out_files(two_sample_compare_list, filename_prefix = \"\")"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/out_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create output files after concordance was performed — out_files","text":"two_sample_compare_list List data generated two_sample_compare(). filename_prefix String path prepended exported filenames. default = \"\".","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/out_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create output files after concordance was performed — out_files","text":"Returns vector shortened strings.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/read_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Excel files into R tibbles — read_files","title":"Read Excel files into R tibbles — read_files","text":"function reads variant list exon coverage Excel files returns tibbles. internal function used all_sample_compare().","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/read_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Excel files into R tibbles — read_files","text":"","code":"read_files(var_file, cov_file)"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/read_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Excel files into R tibbles — read_files","text":"var_file File path variant file. File path supplied openxlsx::read.xlsx(). cov_file File path exon coverage file, sheet = 2. File path supplied openxlsx::read.xlsx().","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/read_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Excel files into R tibbles — read_files","text":"Returns named list tibbles (length = 2). first variant table second exon coverage table.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/two_sample_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two variant call sets — two_sample_compare","title":"Compare two variant call sets — two_sample_compare","text":"function takes two samples input compares using dplyr::*_join() functions. results joins captured returned list. internal function.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/two_sample_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two variant call sets — two_sample_compare","text":"","code":"two_sample_compare(   sample_1_name,   sample_1_var,   sample_1_cov,   sample_2_name,   sample_2_var,   sample_2_cov,   min_vaf = 0.5,   min_fraction_125x = 0.9,   match_by_colnames = c(\"CHROM\", \"POS\", \"REF\", \"ALT\", \"GENE\", \"EXON\"),   suffix_names = c(\".sample_1\", \".sample_2\"),   cds_table )"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/two_sample_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two variant call sets — two_sample_compare","text":"sample_1_name String sample_1 name. sample_1_var Tibble sample_1 variants. sample_1_cov Tibble sample_1 exon coverage. sample_2_name String sample_2 name. sample_2_var Tibble sample_2 variants. sample_2_cov Tibble sample_2 exon coverage. min_vaf Variant tables filtered based minimum variant allele frequency (VAF). Variants VAF less equal value used comparison.  default: 0.05. min_fraction_125x Exon tables filtered based minimum fraction bases covered 125x. default: 0.9. match_by_colnames Vector column names use matching. Passed =  parameter join functions. default: c(\"CHROM\", \"POS\", \"REF\", \"ALT\", \"GENE\", \"EXON\"). suffix_names Suffix names added column names running join functions. Vector length two, default: c(\".sample_1\", \".sample_2\").","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/two_sample_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two variant call sets — two_sample_compare","text":"Returns named list tibbles integers tibble sizes.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/validate_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate an input table of sample info and generate sample sheet — validate_samples","title":"Validate an input table of sample info and generate sample sheet — validate_samples","text":"validate_samples() takes input table sample data uses important columns generate valid sample sheet can used input get_data().","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/validate_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate an input table of sample info and generate sample sheet — validate_samples","text":"","code":"validate_samples(   samples_tbl,   sample_name,   sample_group,   comparison_group,   var_path,   cov_path,   pipeline )"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/validate_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate an input table of sample info and generate sample sheet — validate_samples","text":"samples_tbl Tibble sample info. Requires five columns (listed ). sample_name Column name specifies sample names. string. sample_group Column name specifies sample_group. string. comparison_group Column name specifies comparison_group. string. var_path Column name specifies variants table file path. string. cov_path Column name specifies coverage table file path. string. pipeline Name pipeline produced data. One c(\"hybcap\", \"exome\", \"germline\").","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/validate_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate an input table of sample info and generate sample sheet — validate_samples","text":"Returns sample sheet (tibble) comparisons make. can used input get_data().","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/validate_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate an input table of sample info and generate sample sheet — validate_samples","text":"","code":"# The package provides example data `samples_tbl` that can be used for demo. # Call the example data to make it available.  invisible(samples_tbl) sample_sheet <- validate_samples(samples_tbl,    sample_name = \"sample_name\",    sample_group = \"sample_name_short\",    comparison_group = \"group\",    var_path = \"filtered_path\",    cov_path = \"coverage_path\",    pipeline = \"hybcap\") #> Error in samples_tbl %>% dplyr::select(all_of(c(sample_name, sample_group,     comparison_group, var_path, cov_path))) %>% magrittr::set_colnames(c(\"sample_name\",     \"sample_group\", \"comparison_group\", \"var_path\", \"cov_path\")) %>%     dplyr::mutate(comparison_name = glue(\"{sample_group}_{comparison_group}\")): could not find function \"%>%\""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/write_session_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Write out current R session information — write_session_info","title":"Write out current R session information — write_session_info","text":"function writes R session info, time date stamped filename. function overwrite previous files updated timestamp.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/write_session_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write out current R session information — write_session_info","text":"","code":"write_session_info(out_file_prefix)"},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/write_session_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write out current R session information — write_session_info","text":"out_file_prefix File path, including filename prefix desired.","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/write_session_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write out current R session information — write_session_info","text":"None","code":""},{"path":"https://pages.github.umn.edu/knut0297org/mdlvalr/index.html/reference/write_session_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write out current R session information — write_session_info","text":"","code":"if (FALSE) { out_file_prefix <- \"code_out/dir/050_\" write_session_info(out_file_prefix) }"}]
