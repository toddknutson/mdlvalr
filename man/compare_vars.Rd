% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare_vars.R
\name{compare_vars}
\alias{compare_vars}
\alias{compare_vars.hybcap}
\title{Compare samples using join functions}
\usage{
compare_vars(
  mdlvalr_list,
  pipeline = NULL,
  match_by_colnames = NULL,
  suffix_names = c(".sample1", ".sample2")
)

\method{compare_vars}{hybcap}(
  mdlvalr_list,
  pipeline = "hybcap",
  match_by_colnames = c("CHROM", "POS", "REF", "ALT", "GENE", "EXON"),
  suffix_names = c(".sample1", ".sample2")
)
}
\arguments{
\item{mdlvalr_list}{A standard \code{mdlvalr_list} object (as generated by \code{get_flags()}).
The class of this object can be used to automatically determine which
function methods will be used.}

\item{pipeline}{Standard name of the pipeline from which the data were derived.}

\item{match_by_colnames}{A vector of column names that should be present in each sample variant table. These columns will be used for joining the tables (and thus, rows with exact matching data is merged).}

\item{suffix_names}{A character vector of length two, that provides the suffix string to append to column names of each sample, making the colnames unique.}
}
\value{
Returns a standard \code{mdlvalr_list} object (i.e. a regular R list of lists) that contains tables as named list elements.
The class of the retuned object is updated to include the name of the pipeline. This facilitates use of alternative methods in
downstream functions.
}
\description{
Compare samples using join functions
}
\section{Methods}{

This function is a \strong{generic}, which means that different
implementations (methods) can be executed for different classes. The class
of the first argument will determine which method is used. See the documentation of
individual methods for extra arguments and differences in behaviour.
}

\examples{
class(mdlvalr_list)
# [1] "hybcap" "list"
\notrun{
mdlvalr_list <- compare_vars(
    mdlvalr_list,
    pipeline = "hybcap",
    match_by_colnames = c("CHROM", "POS", "REF", "ALT", "GENE", "EXON"),
    suffix_names = c(".sample1", ".sample2"))
}
}
